syntax = "proto2";

// Structured logfiles generated by the trainer.
package logging;

message NcelLog {
  // Headers are written once every time the program is started.
  // Other runs can append into the same log file.
  repeated NcelHeader header = 1;
  repeated NcelEntry entries = 2;
}

message NcelHeader {
  optional int32 total_params = 1;
  optional string model_architecture = 2;
  repeated string eval_filenames = 3;
  optional int32 start_step = 4;
  optional int64 start_time = 5; // result of time.time() before first step
  repeated string model_label = 6; // if multiple runs print to the same file.

  message CommandLineFlag {
    optional string key = 1;
    optional string value = 2;
  }
  repeated CommandLineFlag flags = 100;
  repeated string extra_logs = 101;
}

message NcelEntry {
  optional int32 step = 1;
  optional float class_accuracy = 2;
  optional float transition_accuracy = 3;
  optional float total_cost = 4;
  optional float cross_entropy_cost = 5;
  optional float transition_cost = 6;
  optional float l2_cost = 7;
  optional float time_per_token_seconds = 8;
  optional float learning_rate = 9;
  optional float invalid = 10;
  optional string model_label = 22; // If multiple logs print to the same file.
  optional string root_label = 23;

  repeated EvalData evaluation = 19;

  optional string checkpoint = 20;
}

message EvalData {
  optional float eval_class_accuracy = 2;
  optional float eval_transition_accuracy = 3;
  optional string filename = 4;
  optional float time_per_token_seconds = 5;
  optional string report_path = 6;
  optional float invalid = 7;
}